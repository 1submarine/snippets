;;; Compiled snippets and support files for `processing-mode'
;;; Snippet definitions:
;;;
(yas-define-snippets 'processing-mode
                     '(("time" "year()$0\n" "year" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/year" nil nil)
                       ("while" "while ($1){\n  $0\n}\n" "while" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/while" nil nil)
                       ("vertex" "vertex(${1:x}, ${2:y}, ${3:z}${6:, ${4:u}, ${5:v}});\n" "vertex 3D" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/vertex_3D" nil nil)
                       ("vertex" "vertex(${1:x}, ${2:y}${5:, ${3:u}, ${4:v}});\n" "vertex" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/vertex" nil nil)
                       ("var" "${1:Object} ${2:o}${4: = new ${1}($3)};\n" "var object" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/var_object" nil nil)
                       ("var" "${1:String} ${2:str}${4: = ${3:value};\n" "var" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/var" nil nil)
                       ("updatePixels" "updatePixels();\n" "updatePixels" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/updatePixels" nil nil)
                       ("unhex" "unhex(${3:c});\n" "unhex" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/unhex" nil nil)
                       ("unbinary" "unbinary(${3:\"${1:str}\"});\n" "unbinary" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/unbinary" nil nil)
                       ("try" "try {\n  $1\n} catch (${2:Exception} e) {\n  $3\n} finally {\n  $4\n}\n" "try..catch..finally" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/try__catch__finally" nil nil)
                       ("try" "try {\n  $1\n} catch (${2:Exception} e) {\n  $3\n}\n" "try..catch" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/try__catch" nil nil)
                       ("try" "try {\n  $1\n}\n" "try" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/try" nil nil)
                       ("trim" "trim(${3:str});\n" "trim" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/trim" nil nil)
                       ("triangle" "triangle(${1:x1}, ${2:y1}, ${3:x2}, ${4:y2}, ${5:x3}, ${6:y3});\n" "triangle" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/triangle" nil nil)
                       ("translate" "translate(${1:x}, ${2:y}${4:, ${3:z}});\n" "translate" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/translate" nil nil)
                       ("tint" "tint(${8:${3:value1}, ${4:value2}, ${5:value3}${7:, ${6:alpha}}});\n" "tint" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/tint" nil nil)
                       ("throw" "throw new Exception(\"${1:Name}\");\n" "throw" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/throw" nil nil)
                       ("text" "text(${1:stringdata}, ${2:x}, ${3:y}, ${4:width}, ${5:height}${7:, ${6:z}});\n" "text stringdata" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/text_stringdata" nil nil)
                       ("text" "text(${1:data}, ${2:x}, ${3:y}${5:, ${4:z}});\n" "text data" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/text_data" nil nil)
                       ("text" "textWidth(${1:data});\n" "textWidth" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/textWidth" nil nil)
                       ("text" "textSize(${1:size});\n" "textSize" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/textSize" nil nil)
                       ("text" "textLeading(${1:size});\n" "textLeading" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/textLeading" nil nil)
                       ("text" "textFont(${1:font}${7:, ${6:size}});\n" "textFont" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/textFont" nil nil)
                       ("text" "textDescent();\n" "textDescent" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/textDescent" nil nil)
                       ("text" "textAscent();\n" "textAscent" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/textAscent" nil nil)
                       ("tan" "tan(${1:rad});\n" "tan" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/tan" nil nil)
                       ("switch" "switch ($1){\n  $0\n}\n" "switch" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/switch" nil nil)
                       ("subset" "subset(${1:array}, ${2:offset});\n" "subset" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/subset" nil nil)
                       ("stroke" "strokeWeight(${1:1});\n" "strokeWeight" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/strokeWeight" nil nil)
                       ("stroke" "stroke(${8:${3:value1}, ${4:value2}, ${5:value3}${7:, ${6:alpha}}});\n" "stroke" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/stroke" nil nil)
                       ("str" "str(${3:\"${1:str}\"});\n" "str" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/str" nil nil)
                       ("status" "status(${1:text});\n" "status" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/status" nil nil)
                       ("sqrt" "sqrt(${1:value});\n" "sqrt" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/sqrt" nil nil)
                       ("sq" "sq(${1:value});\n" "sq" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/sq" nil nil)
                       ("light" "spotLight(${1:v1}, ${2:v2}, ${3:v3}, ${4:x}, ${5:y}, ${6:z}, ${7:nx}, ${8:ny}, ${9:nz}, ${10:angle}, ${11:concentration});\n" "spotLight" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/spotLight" nil nil)
                       ("split" "splitTokens(${3:str}${5:, ${4:tokens}});\n" "splitTokens" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/splitTokens" nil nil)
                       ("split" "split(${3:str}, ${4:delimiter});\n" "split" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/split" nil nil)
                       ("splice" "splice(${1:array}, ${2:value/array2}, ${3:index});\n" "splice" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/splice" nil nil)
                       ("sphere" "sphereDetail(${1:n});\n" "sphereDetail" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/sphereDetail" nil nil)
                       ("sphere" "sphere(${1:radius});\n" "sphere" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/sphere" nil nil)
                       ("material" "specular(${8:${3:value1}, ${4:value2}, ${5:value3}${7:, ${6:alpha}}});\n" "specular" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/specular" nil nil)
                       ("sort" "sort(${1:dataArray}${3:, ${2:count}});\n" "sort" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/sort" nil nil)
                       ("smooth" "smooth();\n" "smooth" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/smooth" nil nil)
                       ("size" "size(${1:200}, ${2:200}${3:, OPENGL});\n" "size OPENGL" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/size_OPENGL" nil nil)
                       ("size" "size(${1:512}, ${2:512});\n" "size" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/size" nil nil)
                       ("sin" "sin(${1:rad});\n" "sin" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/sin" nil nil)
                       ("shorten" "shorten(${1:array});\n" "shorten" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/shorten" nil nil)
                       ("material" "shininess(${1:shine});\n" "shininess" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/shininess" nil nil)
                       ("setup" "import processing.opengl.*;\nimport javax.media.opengl.*;\n\nPGraphicsOpenGL pgl;\nGL gl;\n\nvoid setup(){\n    size( ${1:300}, ${2:300}, OPENGL );\n    colorMode( RGB, 1.0 );\n    hint( ENABLE_OPENGL_4X_SMOOTH );\n    pgl = (PGraphicsOpenGL) g;\n    gl = pgl.gl;\n    gl.setSwapInterval(1);\n    initGL();\n    $3\n}\n\nvoid draw(){\n    pgl.beginGL();\n    $4\n    pgl.endGL();\n    getOpenGLErrors();\n}\n\nvoid initGL(){\n    $5\n}\n\nvoid getOpenGLErrors(){\n  int error = gl.glGetError();\n  switch (error){\n    case 1280 :\n      println(\"GL_INVALID_ENUM - An invalid enumerant was passed to an OpenGL command.\");\n    break;\n    case 1282 :\n      println(\"GL_INVALID_OPERATION - An OpenGL command was issued that was invalid or inappropriate for the current state.\");\n    break;\n    case 1281 :\n      println(\"GL_INVALID_VALUE - A value was passed to OpenGL that was outside the allowed range.\");\n    break;\n    case 1285 :\n      println(\"GL_OUT_OF_MEMORY - OpenGL was unable to allocate enough memory to process a command.\");\n    break;\n    case 1283 :\n      println(\"GL_STACK_OVERFLOW - A command caused an OpenGL stack to overflow.\");\n    break;\n    case 1284 :\n      println(\"GL_STACK_UNDERFLOW - A command caused an OpenGL stack to underflow.\");\n    break;\n    case 32817 :\n      println(\"GL_TABLE_TOO_LARGE\");\n    break;\n  }\n}\n" "setup OpenGL" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/setup_OpenGL" nil nil)
                       ("setup" "void setup(){\n  $1\n}\n\nvoid draw(){\n  $0\n}\n" "setup" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/setup" nil nil)
                       ("set" "set(${1:x}, ${2:y}, ${3:color/image});\n" "set pixel" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/set_pixel" nil nil)
                       ("glSwapInterval" "// specify the minimum swap interval for buffer swaps.\ngl.setSwapInterval(${1:interval});\n" "setSwapInterval" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/setSwapInterval" nil nil)
                       ("set" "public void set${1:varname}(${2:String} new${3:}) {\n    ${1:fieldName} = new${1:};\n}\n" "set" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/set" nil nil)
                       ("time" "second()$0\n" "second" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/second" nil nil)
                       ("screen" "screen.width$0\n" "screen.width" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/screen_width" nil nil)
                       ("screen" "screen.height$0\n" "screen.height" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/screen_height" nil nil)
                       ("coordinates" "screenZ(${1:x}, ${2:y}, ${3:z});\n" "screenZ" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/screenZ" nil nil)
                       ("coordinates" "screenY(${1:x}, ${2:y}, ${3:z});\n" "screenY" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/screenY" nil nil)
                       ("coordinates" "screenX(${1:x}, ${2:y}, ${3:z});\n" "screenX" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/screenX" nil nil)
                       ("scale" "scale(${1:size});\n" "scale SIZE" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/scale_SIZE" nil nil)
                       ("scale" "scale(${1:x}, ${2:y}${4:, ${3:z}});\n" "scale" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/scale" nil nil)
                       ("file" "saveStrings(${1:filename}, ${2:strings});\n" "saveStrings" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/saveStrings" nil nil)
                       ("save" "saveFrame(${2:\"${1:filename-####.ext}\"});\n" "saveFrame" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/saveFrame" nil nil)
                       ("file" "saveBytes(${1:filename}, ${2:bytes});\n" "saveBytes" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/saveBytes" nil nil)
                       ("save" "saveFrame(${2:\"${1:filename}\"});\n" "saveFrame" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/save" nil nil)
                       ("saturation" "saturation(${1:color});\n" "saturation" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/saturation" nil nil)
                       ("round" "round(${1:value});\n" "round" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/round" nil nil)
                       ("rotateZ" "rotateZ(${1:angle});\n" "rotateZ" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/rotateZ" nil nil)
                       ("rotateY" "rotateY(${1:angle});\n" "rotateY" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/rotateY" nil nil)
                       ("rotateX" "rotateX(${1:angle});\n" "rotateX" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/rotateX" nil nil)
                       ("rotate" "rotate(${1:angle});\n" "rotate" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/rotate" nil nil)
                       ("reverse" "reverse(${1:array});\n" "reverse" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/reverse" nil nil)
                       ("matrix" "translate(${1:x}, ${2:y}, ${3:z});\n" "resetMatrix" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/resetMatrix" nil nil)
                       ("red" "red(${1:color});\n" "red" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/red" nil nil)
                       ("rect" "rect(${1:x}, ${2:y}, ${3:width}, ${4:height});\n" "rect" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/rect" nil nil)
                       ("random" "randomSeed(${1:value});\n" "randomSeed" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/randomSeed" nil nil)
                       ("random" "random(${1:value1}${3:, ${2:value2}});\n" "random" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/random" nil nil)
                       ("radians" "radians(${1:deg});\n" "radians" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/radians" nil nil)
                       ("quad" "quad(${1:x1}, ${2:y1}, ${3:x2}, ${4:y2}, ${5:x3}, ${6:y3}, ${7:x4}, ${8:y4});\n" "quad" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/quad" nil nil)
                       ("matrix" "pushMatrix();\n${1:};\npopMatrix();\n" "pushMatrix" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/pushMatrix" nil nil)
                       ("public" "public ${1:Object} ${2:o}${4: = new ${1}($3)};\n" "public var object" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/public_var_object" nil nil)
                       ("public" "public ${1:String} ${2:str}${4: = ${3:value}};\n" "public var" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/public_var" nil nil)
                       ("public" "public static ${1:String} ${2:str}${4: = ${3:value}};\n" "public static var" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/public_static_var" nil nil)
                       ("public" "public static ${1:void} ${2:name}($3) {\n    $0\n}\n" "public static function" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/public_static_function" nil nil)
                       ("public" "public ${1:void} ${2:name}($3) {\n    $0\n}\n" "public function" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/public_function" nil nil)
                       ("protected" "protected ${1:Object} ${2:o}${4: = new ${1}($3)};\n" "protected var object" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/protected_var_object" nil nil)
                       ("protected" "protected ${1:String} ${2:str}${4: = ${3:value}};\n" "protected var" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/protected_var" nil nil)
                       ("protected" "protected ${1:void} ${2:name}($3) {\n    $0\n}\n" "protected function" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/protected_function" nil nil)
                       ("private" "private ${1:Object} ${2:o}${4: = new ${1}($3)};\n" "private var object" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/private_var_object" nil nil)
                       ("private" "private ${1:String} ${2:str}${4: = ${3:value}};\n" "private var" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/private_var" nil nil)
                       ("private" "private static ${1:String} ${2:str}${4: = ${3:value}};\n" "private static var" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/private_static_var" nil nil)
                       ("private" "private static ${1:void} ${2:name}($3) {\n  $0\n}\n" "private static function" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/private_static_function" nil nil)
                       ("private" "private ${1:void} ${2:name}($3) {\n  $0\n}\n" "private function" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/private_function" nil nil)
                       ("println" "println(\"${1:var}: \"+${1:var});$0\n" "println var" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/println_var" nil nil)
                       ("println" "println(\"$1\");$0\n" "println" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/println" nil nil)
                       ("camera" "printProjection();\n" "printProjection" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/printProjection" nil nil)
                       ("matrix" "printMatrix();\n" "printMatrix" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/printMatrix" nil nil)
                       ("camera" "printCamera();\n" "printCamera" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/printCamera" nil nil)
                       ("pow" "pow(${1:num}, ${2:exponent});\n" "pow" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/pow" nil nil)
                       ("light" "pointLight(${1:v1}, ${2:v2}, ${3:v3}, ${4:nx}, ${5:ny}, ${6:nz});\n" "pointLight" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/pointLight" nil nil)
                       ("point" "point(${1:x}, ${2:y}${4:, ${3:z}});\n" "point" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/point" nil nil)
                       ("mouse" "pmouseY$0\n" "pmouseY" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/pmouseY" nil nil)
                       ("mouse" "pmouseX$0\n" "pmouseX" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/pmouseX" nil nil)
                       ("pixels" "pixels[${1:index}]$0\n" "pixels" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/pixels" nil nil)
                       ("perspective" "perspective(${5:${1:fov}, ${2:aspect}, ${3:zNear}, ${4:zFar}});\n" "perspective" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/perspective" nil nil)
                       ("param" "param(${1:s});\n" "param" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/param" nil nil)
                       ("package" "/**\n *  ${1:Description}\n *\n *	@author ${2:`(user-full-name)`}\n *	@since  ${3:`(format-time-string \"%d.%m.%Y\" (current-time))`}\n */\n\npackage ${4:package};\n" "package" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/package" nil nil)
                       ("ortho" "ortho(${7:${1:left}, ${2:right}, ${3:bottom}, ${4:top}, ${5:near}, ${6:far}});\n" "ortho" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/ortho" nil nil)
                       ("online" "online$0\n" "online" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/online" nil nil)
                       ("normal" "normal(${1:nx}, ${2:ny}, ${3:nz});\n" "normal" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/normal" nil nil)
                       ("norm" "norm(${1:value}, ${2:low}, ${3:high});\n" "norm" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/norm" nil nil)
                       ("noiseSeed" "noiseSeed(${1:x});\n" "noiseSeed" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/noiseSeed" nil nil)
                       ("noiseDetail" "noiseDetail(${1:octaves}${4:, ${3:falloff}});\n" "noiseDetail" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/noiseDetail" nil nil)
                       ("noise" "noise(${1:x}${5:, ${2:y}${4:, ${3:z}}});\n" "noise" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/noise" nil nil)
                       ("noTint" "noTint();\n" "noTint" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/noTint" nil nil)
                       ("noStroke" "noStroke();\n" "noStroke" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/noStroke" nil nil)
                       ("smooth" "noSmooth();\n" "noSmooth" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/noSmooth" nil nil)
                       ("light" "noLights();\n" "noLights" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/noLights" nil nil)
                       ("noFill" "noFill();\n" "noFill" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/noFill" nil nil)
                       ("cursor" "noCursor();\n" "noCursor" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/noCursor" nil nil)
                       ("nfs" "nfs(${3:value}, ${4:left}${6:, ${5:right}});\n" "nfs" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/nfs" nil nil)
                       ("nfp" "nfp(${3:value}, ${4:left}${6:, ${5:right}});\n" "nfp" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/nfp" nil nil)
                       ("nfc" "nfc(${3:value}${5:, ${4:right}});\n" "nfc" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/nfc" nil nil)
                       ("nf" "nf(${3:value}, ${4:left}${6:, ${5:right}});\n" "nf" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/nf" nil nil)
                       ("mouse" "mouseY$0\n" "mouseY" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/mouseY" nil nil)
                       ("mouse" "mouseX$0\n" "mouseX" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/mouseX" nil nil)
                       ("mouse" "void mouseReleased(){\n  ${1}\n}\n" "mouseReleased" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/mouseReleased" nil nil)
                       ("mouse" "mousePressed$0\n" "mousePressed 2" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/mousePressed2" nil nil)
                       ("mouse" "void mousePressed(){\n  ${1}\n}\n" "mousePressed" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/mousePressed" nil nil)
                       ("mouse" "void mouseMoved(){\n  ${1}\n}\n" "mouseMoved" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/mouseMoved" nil nil)
                       ("mouse" "void mouseDragged(){\n  ${1}\n}\n" "mouseDragged" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/mouseDragged" nil nil)
                       ("mouse" "mouseButton$0\n" "mouseButton" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/mosueButton" nil nil)
                       ("time" "month()$0\n" "month" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/month" nil nil)
                       ("coordinates" "modelZ(${1:x}, ${2:y}, ${3:z});\n" "modelZ" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/modelZ" nil nil)
                       ("coordinates" "modelY(${1:x}, ${2:y}, ${3:z});\n" "modelY" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/modelY" nil nil)
                       ("coordinates" "modelX(${1:x}, ${2:y}, ${3:z});\n" "modelX" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/modelX" nil nil)
                       ("time" "minute()$0\n" "minute" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/minute" nil nil)
                       ("min" "min(${1:array}};\n" "min array" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/min_array" nil nil)
                       ("min" "min(${1:value1}, ${2:value2}${4:, ${3:value3}});\n" "min" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/min" nil nil)
                       ("time" "millis()$0\n" "millis" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/millis" nil nil)
                       ("max" "max(${1:array}};\n" "max array" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/max_array" nil nil)
                       ("max" "max(${1:value1}, ${2:value2}${4:, ${3:value3}});\n" "max" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/max" nil nil)
                       ("match" "match(${3:str}, ${4:regexp});\n" "match" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/match" nil nil)
                       ("map" "map(${1:value}, ${2:low1}, ${4:high1}, ${5:low2}, ${6:high2});\n" "map" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/map" nil nil)
                       ("mag" "mag(${1:a}, ${2:b}${4:, ${3:c}});\n" "mag" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/mag" nil nil)
                       ("log" "log(${1:value});\n" "log" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/log" nil nil)
                       ("load" "loadStrings(${2:\"${1:filename}\"});\n" "loadStrings" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/loadStrings" nil nil)
                       ("loadPixels" "loadPixels();\n" "loadPixels" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/loadPixels" nil nil)
                       ("loadImage" "loadImage(${1:filename});\n" "loadImage" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/loadImage" nil nil)
                       ("font" "${1:font} = loadFont(${3:\"${2:FFScala-32.vlw}\"});\n" "loadFont" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/loadFont" nil nil)
                       ("load" "loadBytes(${2:\"${1:filename}\"});\n" "loadBytes" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/loadBytes" nil nil)
                       ("link" "link(${1:url}${4:, ${3:target}});\n" "link" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/link" nil nil)
                       ("line" "line(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2});\n" "line 3d" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/line_3d" nil nil)
                       ("line" "line(${1:x1}, ${2:y1}, ${3:x2}, ${4:y2});\n" "line" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/line" nil nil)
                       ("light" "lights();\n" "lights" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/lights" nil nil)
                       ("light" "lightFalloff(${1:v1}, ${2:v2}, ${3:v3});\n" "lightSpecular" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/lightSpecular" nil nil)
                       ("light" "lightFalloff(${1:constant}, ${2:linear}, ${3:quadratic});\n" "lightFalloff" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/lightFalloff" nil nil)
                       ("lerpColor" "lerpColor(${1:c1}, ${2:c2}, ${3:amt});\n" "lerpColor" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/lerpColor" nil nil)
                       ("lerp" "lerp(${1:value1}, ${2:value2}, ${3:amt});\n" "lerp" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/lerp" nil nil)
                       ("key" "void keyTyped(){\n  ${1}\n}\n" "keytyped" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/keyTyped" nil nil)
                       ("keyReleased" "void keyReleased(){\n  ${1}\n}\n" "keyReleased" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/keyReleased" nil nil)
                       ("key" "keyPressed$0\n" "keyPressed 2" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/keyPressed2" nil nil)
                       ("key" "void keyPressed(){\n  ${1}\n}\n" "keyPressed" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/keyPressed" nil nil)
                       ("key" "keyCode$0\n" "keyCode" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/keyCode" nil nil)
                       ("key" "key$0\n" "key" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/key" nil nil)
                       ("join" "join(${3:strgArray}, ${4:seperator});\n" "join" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/join" nil nil)
                       ("int" "int ${1:f} ${6:= ${3:0}};\n" "int" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/int" nil nil)
                       ("image" "image(${1:img}, ${2:x}, ${3:y}${6:, ${4:width}, ${5:height}});\n" "image" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/image" nil nil)
                       ("?" "? ${1:trueExpression} : ${2:falseExpression}$0\n" "if short" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/if_short" nil nil)
                       ("if" "if ($1){\n  $0\n}\n" "if" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/if" nil nil)
                       ("hue" "hue(${1:color});\n" "hue" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/hue" nil nil)
                       ("time" "hour()$0\n" "hour" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/hour" nil nil)
                       ("hex" "hex(${3:c});\n" "hex" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/hex" nil nil)
                       ("green" "green(${1:color});\n" "green" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/green" nil nil)
                       ("glVertex3f" "gl.glVertex3f(${1:0.0f}, ${2:0.0f}, ${3:0.0f});\n" "glVertex3f" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/glVertex3f" nil nil)
                       ("glVertex2f" "gl.glVertex2f(${1:0.0f}, ${2:0.0f});\n" "glVertex2f" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/glVertex2f" nil nil)
                       ("glTranslatef" "// multiply the current matrix by a translation matrix\ngl.glTranslatef(${1:x}, ${2:y}, ${3:z});\n" "glTranslatef" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/glTranslatef" nil nil)
                       ("glTexCoord2f" "// set the current texture coordinates - 2 floats\ngl.glTexCoord2f(${1:0.0f}, ${2:0.0f});\n" "glTexCoord2f" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/glTexCoord2f" nil nil)
                       ("glScalef" "// multiply the current matrix by a general scaling matrix\ngl.glScalef(${1:x}, ${2:y}, ${3:z});\n" "glScalef" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/glScalef" nil nil)
                       ("glRotatef" "// rotate, x-axis, y-axis, z-axiz\ngl.glRotatef(${1:angle}, ${2:x}, ${3:y}, ${4:z});\n" "glRotatef" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/glRotatef" nil nil)
                       ("glPushMatrix" "// spush and pop the current matrix stack\ngl.glPushMatrix();\n$1\ngl.glPopMatrix();\n" "glPushMatrix" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/glPushMatrix" nil nil)
                       ("glLoadIdentity" "// replaces the top of the active matrix stack with the identity matrix\ngl.glLoadIdentity();\n" "glLoadIdentity" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/glLoadIdentity" nil nil)
                       ("glGetError" "println(gl.glGetError());\n" "glGetError" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/glGetError" nil nil)
                       ("glGenLists" "gl.glGenLists(${1:1});\n" "glGenLists" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/glGenLists" nil nil)
                       ("glGenBuffers" "// import java.nio.IntBuffer;\n// import java.nio.FloatBuffer;\n// import com.sun.opengl.util.BufferUtil;\n\n// You might need to create four buffers to store vertext data, normal data, texture coordinate data, and indices in vertex arrays\nIntBuffer bufferObjects = IntBuffer.allocate(${1:4});\ngl.glGenBuffers($1, bufferObjects);\n\nint vertexCount = ${2:3};\nint numCoordinates = ${3:3};\n// vertexCount * numCoordinates\nFloatBuffer vertices = BufferUtil.newFloatBuffer(vertexCount * numCoordinates);\nfloat[] v = {0.0f, 0.0f, 0.0f,\n             1.0f, 0.0f, 0.0f,\n             0.0f, 1.0f, 1.0f};\nvertices.put(v);\n\n// Bind the first buffer object ID for use with vertext array data\ngl.glBindBuffer(GL.GL_ARRAY_BUFFER, bufferObjects.get(0));\ngl.glBufferData(GL.GL_ARRAY_BUFFER, vertexCount * numCoordinates * BufferUtil.SIZEOF_FLOAT, vertices, GL.GL_STATIC_DRAW);\n" "glGenBuffers" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/glGenBuffers" nil nil)
                       ("glFlush" "// Empties buffers. Call this when all previous issues commands completed\ngl.glFlush();\n" "glFlush" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/glFlush" nil nil)
                       ("glDepthMask" "// enable or disable writing into the depth buffer\ngl.glDepthMask(${1:flag});\n" "glDepthMask" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/glDepthMask" nil nil)
                       ("glDeleteBuffers" "${3:// Parameters are the same for glGenBuffers}\ngl.glDeleteBuffers(${1:4}, ${2:bufferObjects});\n" "glDeleteBuffers" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/glDeleteBuffer" nil nil)
                       ("glColor4f" "gl.glColor4f(${1:red}, ${2:green}, ${3:blue}, ${4:alpha});\n" "glColor4f" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/glColor4f" nil nil)
                       ("glColor3f" "gl.glColor3f(${1:red}, ${2:green}, ${3:blue});\n" "glColor3f" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/glColor3f" nil nil)
                       ("glClearColor" "gl.glClearColor(${1:red}, ${2:green}, ${3:blue}, ${4:alpha});\n" "glClearColor" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/glClearColor" nil nil)
                       ("glClear" "gl.glClear(${1:GL.GL_COLOR_BUFFER_BIT}${3: | ${2:GL.GL_DEPTH_BUFFER_BIT}});\n" "glClear" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/glClear" nil nil)
                       ("glCallList" "// execute a display list\ngl.glCallList(${1:list});\n" "glCallList" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/glCallList" nil nil)
                       ("glBindBuffer" "${2:// A buffer ID of zero unbinds a buffer object}\ngl.glBindBuffer(GL.GL_ARRAY_BUFFER, ${1:0});\n" "glBindBuffer" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/glBindBuffer" nil nil)
                       ("get" "get(${6:${1:x}, ${2:y}${5:, ${3:width}, ${4:height}}});\n" "get pixel" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/get_pixel" nil nil)
                       ("get" "public ${1:String} get${2:var}() {\n    return ${3:fieldName};\n}\n" "get" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/get" nil nil)
                       ("function" "${1:void} ${2:name}($3) {\n  $0\n}\n" "function" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/function" nil nil)
                       ("camera" "frustrum(${7:${1:left}, ${2:right}, ${3:bottom}, ${4:top}, ${5:near}, ${6:far}});\n" "frustum" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/frustum" nil nil)
                       ("framerate" "frameRate\n" "frameRate 2" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/frameRate2" nil nil)
                       ("framerate" "frameRate($0);\n" "frameRate" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/frameRate" nil nil)
                       ("framerate" "frameCount\n" "frameCount" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/frameCount" nil nil)
                       ("for" "for (${1:Object} ${2:o} : ${3:array}){\n  $0\n}\n" "for in" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/for_in" nil nil)
                       ("for" "for (int ${1:i} = ${2:0}; ${1:i}<${3:len}; ${1:i}++){\n  $0\n}\n" "for" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/for" nil nil)
                       ("focused" "focused\n" "focused" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/focused" nil nil)
                       ("floor" "floor(${1:value});\n" "floor" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/floor" nil nil)
                       ("float" "float ${1:f} ${6:= ${3:0.0f}};\n" "float" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/float" nil nil)
                       ("fill" "fill(${8:${3:value1}, ${4:value2}, ${5:value3}${7:, ${6:alpha}}});\n" "fill" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/fill" nil nil)
                       ("expand" "expand(${1:array}${3:, ${2:newSize}});\n" "expand" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/expand" nil nil)
                       ("exp" "exp(${1:value});\n" "exp" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/exp" nil nil)
                       ("file" "endRecord();\n" "endRecord" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/endRecord" nil nil)
                       ("camera" "endCamera();\n" "endCamera" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/endCamera" nil nil)
                       ("material" "emissive(${8:${3:value1}, ${4:value2}, ${5:value3}});\n" "emissive" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/emissive" nil nil)
                       ("else" "else if ($1) {\n  $0\n}\n" "else if" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/else_if" nil nil)
                       ("else" "else {\n  $0\n}\n" "else" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/else" nil nil)
                       ("ellipseMode" "ellipseMode(${1:CENTER});\n" "ellipseMode" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/ellipseMode" nil nil)
                       ("ellipse" "ellipse(${1:x}, ${2:y}, ${3:width}, ${4:height});\n" "ellipse" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/ellipse" nil nil)
                       ("doc" "*\n" "doc - newline" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/doc_newline" nil nil)
                       ("doc" "/**\n *	${1:@private}$0\n */\n" "doc - coment" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/doc_comment" nil nil)
                       ("doc" "/**\n *  ${1:Description}\n *\n *	@author ${2:`(user-full-name)`}\n *	@since  ${3:`(format-time-string \"%d.%m.%Y\" (current-time))`}\n */\n" "doc - class" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/doc_class" nil nil)
                       ("dist" "dist(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2});\n" "dist3D" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/dist_3d" nil nil)
                       ("dist" "dist(${1:x1}, ${2:y1}, ${4:x2}, ${5:y2});\n" "dist" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/dist" nil nil)
                       ("light" "directionalLight(${1:v1}, ${2:v2}, ${3:v3}, ${4:nx}, ${5:ny}, ${6:nz});\n" "directionalLight" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/directionalLight" nil nil)
                       ("degrees" "degrees(${1:rad});\n" "degrees" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/degrees" nil nil)
                       ("default" "default:\n  $0\nbreak;\n" "default" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/default" nil nil)
                       ("curve" "curve(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:x3}, ${8:y3}, ${9:z3}, ${10:x4}, ${11:y4}, ${12:z4});\n" "curve3D" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/curve_3d" nil nil)
                       ("curvevertex" "curveVertex(${1:x}, ${2:y}, ${3:z});\n" "curveVertex3D" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/curveVertex_3d" nil nil)
                       ("curvevertex" "curveVertex(${1:x}, ${2:y});\n" "curveVertex" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/curveVertex" nil nil)
                       ("curve" "curveTightness(${1:squishy});\n" "curveTightness" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/curveTightness" nil nil)
                       ("curve" "curvePoint(${1:a}, ${1:b}, ${1:c}, ${1:d}, ${1:t});\n" "curvePoint" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/curvePoint" nil nil)
                       ("curve" "curveDetail(${1:detail});\n" "curveDetail" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/curveDetail" nil nil)
                       ("curve" "curve(${1:x1}, ${2:y1}, ${3:x2}, ${4:y2}, ${5:x3}, ${6:y3}, ${7:x4}, ${8:y4});\n" "curve" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/curve" nil nil)
                       ("file" "createWriter(${1:filename});\n" "createWriter" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/createWriter" nil nil)
                       ("file" "createReader(${1:filename});\n" "createReader" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/createReader" nil nil)
                       ("cos" "cos(${1:rad});\n" "cos" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/cos" nil nil)
                       ("copy" "copy(${10:${9:srcImg}, }${1:x}, ${2:y}, ${3:width}, ${4:height}, ${5:dx}, ${6:dy}, ${7:dwidth}, ${8:dheight});\n" "copy" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/copy" nil nil)
                       ("constrain" "constrain(${1:value}, ${2:min}, ${3:max});\n" "constrain" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/constrain" nil nil)
                       ("const" "static final ${1:Object} ${2:VAR_NAM} = $0;\n" "const" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/const" nil nil)
                       ("concat" "concat(${1:array1}, ${2:array2});\n" "concat" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/concat" nil nil)
                       ("color" "color ${1:c} ${6:= color(${3:value1}, ${4:value2}, ${5:value3})};\n" "color" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/color" nil nil)
                       ("class" "${1:public }class ${2:${`(file-name-nondirectory (file-name-sans-extension (buffer-file-name)))`}} ${3:extends}\n{\n\n  //--------------------------------------\n  //  CONSTRUCTOR\n  //--------------------------------------\n\n  public $2 (${4:arguments}) {\n    ${0:// expression}\n  }\n}\n" "class" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/class" nil nil)
                       ("char" "char ${1:m} ${6:= \"${3:char}\"};\n" "char" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/char" nil nil)
                       ("ceil" "ceil(${1:value});\n" "ceil" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/ceil" nil nil)
                       ("catch" "catch (${1:Exception} e) {\n  $0\n}\n" "catch" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/catch" nil nil)
                       ("case" "case ${1:expression}:\n  $0\nbreak;\n" "case" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/case" nil nil)
                       ("camera" "camera(${10:${1:eyeX}, ${2:eyeY}, ${3:eyeZ}, ${4:centerX}, ${5:centerY}, ${6:centerZ}, ${7:upX}, ${8:upY}, ${9:upZ}});\n" "camera" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/camera" nil nil)
                       ("byte" "byte ${1:b} ${6:= ${3:127}};\n" "byte" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/byte" nil nil)
                       ("brightness" "brightness(${1:color});\n" "brightness" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/brightness" nil nil)
                       ("break" "break ${1:label};\n" "break" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/break" nil nil)
                       ("box" "box(${4:${1:width}, ${2:height}, ${3:depth}});\n" "box" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/box" nil nil)
                       ("boolean" "boolean ${1:b} ${6:= ${3:true}};\n" "boolean" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/boolean" nil nil)
                       ("blue" "blue(${1:color});\n" "blue" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/blue" nil nil)
                       ("binary" "binary(${3:value}${5:, ${4:digits}});\n" "binary" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/binary" nil nil)
                       ("bezier" "bezier(${1:x1}, ${2:y1}, ${3:z1}, ${4:cx1}, ${5:cy1}, ${6:cz1}, ${7:cx2}, ${8:cy2}, ${9:cz2}, ${10:x2}, ${11:y2}, ${12:z2});\n" "bezier3D" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/bezier_3d" nil nil)
                       ("beziervertex" "bezierVertex(${1:cx1}, ${2:cy1}, ${3:cz1}, ${4:cx2}, ${5:cy2}, ${6:cz2}, ${7:x}, ${8:y}, ${9:z});\n" "bezierVertex3D" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/bezierVertex_3d" nil nil)
                       ("beziervertex" "bezierVertex(${1:cx1}, ${2:cy1}, ${3:cx2}, ${4:cy2}, ${5:x}, ${6:y});\n" "bezierVertex" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/bezierVertex" nil nil)
                       ("bezier" "bezierTangent(${1:a}, ${1:b}, ${1:c}, ${1:d}, ${1:t});\n" "bezierTangent" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/bezierTangent" nil nil)
                       ("bezier" "bezierPoint(${1:a}, ${1:b}, ${1:c}, ${1:d}, ${1:t});\n" "bezierPoint" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/bezierPoint" nil nil)
                       ("bezier" "bezierDetail(${1:detail});\n" "bezierDetail" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/bezierDetail" nil nil)
                       ("bezier" "bezier(${1:x1}, ${2:y1}, ${3:cx1}, ${4:cy1}, ${5:cx2}, ${6:cy2}, ${7:x2}, ${8:y2});\n" "bezier" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/bezier" nil nil)
                       ("file" "beginRecord(${1:renderer}, ${2:filename});\n" "beginRecord" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/beginRecord" nil nil)
                       ("begingl" "pgl.beginGL();\n$1\npgl.endGL();\n" "beginGL" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/beginGL" nil nil)
                       ("camera" "beginCamera();\n" "beginCamera" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/beginCamera" nil nil)
                       ("background" "background(${8:${3:value1}, ${4:value2}, ${5:value3}${7:, ${6:alpha}}});\n" "background" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/background" nil nil)
                       ("atan2" "atan2(${1:y},${2:x});\n" "atan2" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/atan2" nil nil)
                       ("atan" "atan(${1:rad});\n" "atan" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/atan" nil nil)
                       ("asin" "asin(${1:rad});\n" "asin" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/asin" nil nil)
                       ("arrayCopy" "arrayCopy(${1:src}, ${2:dest}, ${4:, ${3:length}});\n" "arrayCopy" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/arrayCopy" nil nil)
                       ("arc" "arc(${1:x}, ${2:y}, ${3:width}, ${4:height}, ${5:start}, ${6:stop});\n" "arc" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/arc" nil nil)
                       ("for" "append(${1:array}, ${2:element});\n" "foreach" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/append" nil nil)
                       ("light" "ambientLight(${1:v1}, ${2:v2}, ${3:v3}${7:, ${4:x}, ${5:y}, ${6:z}});\n" "ambientLight" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/ambientLight" nil nil)
                       ("material" "ambient(${8:${3:value1}, ${4:value2}, ${5:value3}});\n" "ambient" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/ambient" nil nil)
                       ("alpha" "alpha(${1:color});\n" "alpha" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/alpha" nil nil)
                       ("acos" "acos(${1:rad});\n" "acos" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/acos" nil nil)
                       ("abs" "abs(${1:value});\n" "abs" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/abs" nil nil)
                       ("pi" "TWO_PI$0\n" "TWO PI" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/TWO_PI" nil nil)
                       ("string" "String ${1:str} ${6:= \"${3:CCCP}\"};\n" "String" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/String" nil nil)
                       ("PImage" "PImage(${1:width}, ${2:height});\n" "PImage" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/PImage" nil nil)
                       ("pi" "PI$0\n" "PI" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/PI" nil nil)
                       ("PGraphics" "PGraphics pg;\npg = createGraphics(${5:${1:width}, ${2:height}${4:, ${3:applet}}});\n" "PGraphics" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/PGraphics" nil nil)
                       ("font" "PFont ${1:font};\n$1 = loadFont(${3:\"${2:FFScala-32.vlw}\"});\n" "PFont" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/PFont" nil nil)
                       ("object" "${1:Object} ${2:o}${4: = new ${1}($3)};\n" "Object" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/Object" nil nil)
                       ("pi" "HALF_PI$0\n" "HALF PI" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/HALF_PI" nil nil)
                       ("ArrayList" "ArrayList<${1:String}> ${2:arraylist} = new ArrayList<$1>();\n" "ArrayList" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/ArrayList" nil nil)
                       ("array" "${1:int}[] ${2:numbers} ${6:= new $1[${3:length}]};\n" "Array" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/Array" nil nil)
                       ("@" "@return  ${1:parameter}  ${2:description}\n" "@return" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/@return" nil nil)
                       ("@" "@public$0\n" "@public" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/@public" nil nil)
                       ("@" "@private$0\n" "@private" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/@private" nil nil)
                       ("@" "@param  ${1:parameter}  ${2:description}\n" "@param" nil nil nil "/home/hlissner/.config/doom/snippets/processing-mode/@param" nil nil)))


;;; Do not edit! File generated at Wed Mar 13 18:35:12 2019
